<%
  envs = %w(openstack)
  stemcell_types = {
    'openstack' => 'openstack-kvm'
  }
  enable_failure_alert = true
%>
---
resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: bosh-errand
  type: docker-image
  source:
    repository: pcfkubo/bosh2-errand-resource
    tag: v0.1.3-dev

resources:
- name: git-kubo-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/kubo-ci
    branch: master

- name: git-kubo-deployment
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-deployment.git
    branch: develop
    private_key: ((git-ssh-key.private_key))
    ignore_paths:
    - 'LICENSE'
    - 'NOTICE'

- name: git-kubo-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-release.git
    branch: develop
    private_key: ((git-ssh-key.private_key))
    ignore_paths:
    - '*.md'
    - 'LICENSE'
    - 'NOTICE'

- name: slackers
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/cfcr-home.git
    private_key: ((git-ssh-key.private_key))
    paths:
    - 'slackers'

- name: slack-alert
  type: slack-notification
  source:
    url: ((build-alert-slack-url))

- name: cfcr-deployment
  type: bosh-deployment
  source:
    deployment: ci-service
    skip_check: true

# - name: cfcr-deployment-turbulence
#   type: bosh-deployment
#   source:
#     deployment: ci-service-turbulence
#     skip_check: true

- name: run-apply-addons-errand
  type: bosh-errand
  source:
    deployment: ci-service
    skip_check: true

# - name: run-apply-addons-errand-turbulence
#   type: bosh-errand
#   source:
#     deployment: ci-service-turbulence
#     skip_check: true

- name: run-smoke-tests-errand
  type: bosh-errand
  source:
    deployment: ci-service
    skip_check: true

# - name: run-smoke-tests-errand-turbulence
#   type: bosh-errand
#   source:
#     deployment: ci-service-turbulence
#     skip_check: true

- name: gcs-bosh-creds
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: bosh/duck-openstack/creds.yml

- name: gcs-kubeconfig
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: k8s/config

- name: gcs-kubo-release-tarball-untested
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    regexp: dev-builds/kubo-release-(.*).tgz

- name: gcs-kubo-deployment-tarball-untested
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    regexp: dev-builds/kubo-deployment-(.*).tgz

<% envs.each do |env| %>
- name: stemcell-<%= env %>
  type: bosh-io-stemcell
  source:
    name: bosh-<%= stemcell_types[env] %>-ubuntu-xenial-go_agent
<% end %>

jobs:
<% envs.each do |env| %>
- name: deploy-k8s-<%= env %>
  serial_groups: [main]
  plan:
  - aggregate:
    - get: slackers
    - get: gcs-bosh-creds
    - get: git-kubo-ci
    - get: git-kubo-deployment
      trigger: true
    - get: git-kubo-release
      trigger: true
    - get: gcs-kubo-release-tarball-untested
    - get: gcs-kubo-deployment-tarball-untested
    - get: stemcell
      resource: stemcell-<%= env %>
  - task: get-bosh-source-json-from-lock
    file: git-kubo-ci/tasks/get-bosh-source-json-from-lock.yml
  - put: cfcr-deployment
    params:
      manifest: git-kubo-deployment/manifests/cfcr.yml
      cleanup: true
      no_redact: true
      ops_files:
      - git-kubo-deployment/manifests/ops-files/misc/bootstrap.yml
      - git-kubo-deployment/manifests/ops-files/use-runtime-config-bosh-dns.yml
      - git-kubo-deployment/manifests/ops-files/allow-privileged-containers.yml
      - git-kubo-deployment/manifests/ops-files/addons-spec.yml
      - git-kubo-deployment/manifests/ops-files/enable-bbr.yml
      - git-kubo-ci/manifests/ops-files/add-hpa-properties.yml
      - git-kubo-deployment/manifests/ops-files/iaas/openstack/cloud-provider.yml
      - git-kubo-ci/manifests/ops-files/add-master-static-ips.yml
      - git-kubo-deployment/manifests/ops-files/misc/single-master.yml
      - git-kubo-ci/manifests/ops-files/scale-to-one-az.yml
      var_files:
        addons-spec: "git-kubo-ci/specs/guestbook.yml"
      vars_files:
      - gcs-bosh-creds/creds.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - gcs-kubo-release-tarball-untested/*.tgz
      source_file: source-json/source.json
      vars:
        deployment_name: ci-service
        worker_count: 3
        master_static_ips: [192.168.13.11]
        kubernetes_master_host: 192.168.13.11
    tags: [<%= env %>]
    on_failure: &on_failure_alert
      do:
      - task: configure-slack-notification
        file: git-kubo-ci/tasks/configure-slack-notification.yml
      - put: slack-alert
        params:
          attachments_file: slack-notification/attachments
          text: |
            Build Failed. https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  - task: update-kubeconfig
    tags: ['<%= env %>']
    file: git-kubo-ci/tasks/update-kubeconfig.yml
    params:
      CREDFILE: gcs-bosh-creds/creds.yml
      VARFILE: gcs-bosh-creds/creds.yml
      API_URL: https://192.168.13.11:8443
    input_mapping:
      kubo-lock: gcs-bosh-creds
  - put: run-apply-addons-errand
    params:
      name: apply-addons
      keep_alive: true
      source_file: source-json/source.json
    tags: [<%= env %>]
    on_failure: *on_failure_alert
  - put: run-smoke-tests-errand
    params:
      name: smoke-tests
      keep_alive: true
      source_file: source-json/source.json
    tags: [<%= env %>]
    on_failure: *on_failure_alert
  - put: gcs-kubeconfig
    params:
      file: kubeconfig/config

# - name: deploy-k8s-turbulence-<%= env %>
#   serial_groups: [turbulence]
#   plan:
#   - aggregate:
#     - get: slackers
#     - get: gcs-bosh-creds
#     - get: git-kubo-ci
#     - get: git-kubo-deployment
#       trigger: true
#     - get: git-kubo-release
#       trigger: true
#     - get: gcs-kubo-release-tarball-untested
#     - get: gcs-kubo-deployment-tarball-untested
#     - get: stemcell
#       resource: stemcell-<%= env %>
#   - task: get-bosh-source-json-from-lock
#     file: git-kubo-ci/tasks/get-bosh-source-json-from-lock.yml
#   - put: cfcr-deployment-turbulence
#     params:
#       manifest: git-kubo-deployment/manifests/cfcr.yml
#       cleanup: true
#       no_redact: true
#       ops_files:
#       - git-kubo-deployment/manifests/ops-files/misc/bootstrap.yml
#       - git-kubo-deployment/manifests/ops-files/use-runtime-config-bosh-dns.yml
#       - git-kubo-deployment/manifests/ops-files/allow-privileged-containers.yml
#       - git-kubo-deployment/manifests/ops-files/addons-spec.yml
#       - git-kubo-deployment/manifests/ops-files/enable-bbr.yml
#       - git-kubo-ci/manifests/ops-files/add-hpa-properties.yml
#       - git-kubo-deployment/manifests/ops-files/iaas/openstack/cloud-provider.yml
#       - git-kubo-ci/manifests/ops-files/add-master-static-ips.yml
#       - git-kubo-deployment/manifests/ops-files/misc/single-master.yml
#       - git-kubo-ci/manifests/ops-files/scale-to-one-az.yml
#       - git-kubo-deployment/manifests/ops-files/rename.yml
#       var_files:
#         addons-spec: "git-kubo-ci/specs/guestbook.yml"
#       vars_files:
#       - gcs-bosh-creds/creds.yml
#       stemcells:
#       - stemcell/stemcell.tgz
#       releases:
#       - gcs-kubo-release-tarball-untested/*.tgz
#       source_file: source-json/source.json
#       vars:
#         deployment_name: ci-service-turbulence
#         worker_count: 3
#         master_static_ips: [192.168.13.21]
#         kubernetes_master_host: 192.168.13.21
#     tags: [<%= env %>]
#     on_failure: &on_failure_alert
#       do:
#       - task: configure-slack-notification
#         file: git-kubo-ci/tasks/configure-slack-notification.yml
#       - put: slack-alert
#         params:
#           attachments_file: slack-notification/attachments
#           text: |
#             Build Failed. https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
#   - task: update-kubeconfig
#     tags: ['<%= env %>']
#     file: git-kubo-ci/tasks/update-kubeconfig.yml
#     params:
#       CREDFILE: gcs-bosh-creds/creds.yml
#       VARFILE: gcs-bosh-creds/creds.yml
#       API_URL: https://192.168.13.21:8443
#       DEPLOYMENT_NAME: "ci-service-turbulence"
#     input_mapping:
#       kubo-lock: gcs-bosh-creds
#   - put: run-apply-addons-errand-turbulence
#     params:
#       name: apply-addons
#       keep_alive: true
#       source_file: source-json/source.json
#     tags: [<%= env %>]
#     on_failure: *on_failure_alert
#   - put: run-smoke-tests-errand-turbulence
#     params:
#       name: smoke-tests
#       keep_alive: true
#       source_file: source-json/source.json
#     tags: [<%= env %>]
#     on_failure: *on_failure_alert
#   - put: gcs-kubeconfig
#     params:
#       file: kubeconfig/config

- name: run-k8s-integration-tests-<%= env %>
  plan:
  - aggregate:
    - get: slackers
    - get: gcs-bosh-creds
    - get: git-kubo-ci
    - get: git-kubo-deployment
      passed: [ 'deploy-k8s-<%= env %>' ]
      trigger: true
    - get: git-kubo-release
      passed: [ 'deploy-k8s-<%= env %>' ]
      trigger: true
    - get: gcs-kubo-release-tarball-untested
      passed: [ 'deploy-k8s-<%= env %>' ]
    - get: gcs-kubo-deployment-tarball-untested
      passed: [ 'deploy-k8s-<%= env %>' ]
    - get: gcs-kubeconfig
      passed: [ 'deploy-k8s-<%= env %>' ]
      version: every
      trigger: true
  - task: integration-tests
    tags: [<%= env %>]
    file: git-kubo-ci/tasks/run-k8s-integration-tests.yml
    on_failure: *on_failure_alert
    params:
      DEPLOYMENT_NAME: ci-service
      ENABLE_PERSISTENT_VOLUME_TESTS: true
      ENABLE_K8S_LBS_TESTS: false
      ENABLE_MULTI_AZ_TESTS: false

- name: run-k8s-conformance-tests-<%= env %>
  plan:
  - aggregate:
    - get: slackers
    - get: gcs-bosh-creds
    - get: git-kubo-ci
    - get: gcs-kubo-release-tarball-untested
      passed: [ 'deploy-k8s-<%= env %>' ]
    - get: gcs-kubo-deployment-tarball-untested
      passed: [ 'deploy-k8s-<%= env %>' ]
    - get: git-kubo-deployment
      passed: [ 'deploy-k8s-<%= env %>' ]
      trigger: true
    - get: git-kubo-release
      passed: [ 'deploy-k8s-<%= env %>' ]
    - get: gcs-kubeconfig
      passed: [ 'deploy-k8s-<%= env %>' ]
      version: every
      trigger: true
  - task: conformance-tests
    file: git-kubo-ci/tasks/run-conformance-tests.yml
    tags:
    - <%= env %>
    on_failure: *on_failure_alert

<%
  turbulence_passed_reqs = ["deploy-k8s-turbulence-#{env}"]
%>

# - name: run-k8s-turbulence-tests-<%= env %>
#   serial_groups: [turbulence]
#   plan:
#   - aggregate:
#     - get: slackers
#     - get: gcs-bosh-creds
#       passed: <%= turbulence_passed_reqs %>
#     - get: git-kubo-ci
#     - get: gcs-kubo-release-tarball-untested
#       passed: <%= turbulence_passed_reqs %>
#     - get: gcs-kubo-deployment-tarball-untested
#       passed: <%= turbulence_passed_reqs %>
#     - get: git-kubo-deployment
#       passed: <%= turbulence_passed_reqs %>
#       trigger: true
#     - get: git-kubo-release
#       passed: <%= turbulence_passed_reqs %>
#       trigger: true
#     - get: gcs-kubeconfig
#       passed: [ 'deploy-k8s-turbulence-<%= env %>' ]
#       version: every
#   - task: copy-openstack-creds-to-director
#     file: git-kubo-ci/tasks/copy-openstack-creds-to-director.yml
#   - task: turbulence-tests
#     file: git-kubo-ci/tasks/run-k8s-turbulence-tests.yml
#     tags: ['<%= env %>']
#     on_failure: *on_failure_alert
#     params:
#       DEPLOYMENT_NAME: ci-service-turbulence
#       ENABLE_TURBULENCE_WORKER_DRAIN_TESTS: true
#       ENABLE_TURBULENCE_WORKER_FAILURE_TESTS: true
#       ENABLE_TURBULENCE_MASTER_FAILURE_TESTS: true
#       ENABLE_TURBULENCE_PERSISTENCE_FAILURE_TESTS: false

<%
  destroy_k8s_reqs = ["run-k8s-integration-tests-#{env}", "run-k8s-conformance-tests-#{env}"]
%>
- name: destroy-k8s-<%= env %>
  serial_groups: [main]
  plan:
  - aggregate:
    - get: slackers
    - get: git-kubo-ci
    - get: gcs-bosh-creds
    - get: git-kubo-deployment
      passed: <%= destroy_k8s_reqs %>
      trigger: true
    - get: git-kubo-release
      passed: <%= destroy_k8s_reqs %>
      trigger: true
    - get: gcs-kubeconfig
      passed: <%= destroy_k8s_reqs %>
      version: every
      trigger: true
    - get: gcs-kubo-release-tarball-untested
      passed: <%= destroy_k8s_reqs %>
    - get: gcs-kubo-deployment-tarball-untested
      passed: <%= destroy_k8s_reqs %>
  - task: get-bosh-source-json-from-lock
    file: git-kubo-ci/tasks/get-bosh-source-json-from-lock.yml
  - task: destroy-k8s
    tags: [<%= env %>]
    file: git-kubo-ci/tasks/destroy-k8s-instance.yml
    on_failure: *on_failure_alert

# - name: destroy-k8s-turbulence-<%= env %>
#   serial_groups: [turbulence]
#   plan:
#   - aggregate:
#     - get: slackers
#     - get: git-kubo-ci
#     - get: gcs-bosh-creds
#     - get: git-kubo-deployment
#       passed: ['run-k8s-turbulence-tests-<%= env %>']
#       trigger: true
#     - get: git-kubo-release
#       passed: ['run-k8s-turbulence-tests-<%= env %>']
#       trigger: true
#     - get: gcs-kubo-release-tarball-untested
#       passed: ['run-k8s-turbulence-tests-<%= env %>']
#     - get: gcs-kubo-deployment-tarball-untested
#       passed: ['run-k8s-turbulence-tests-<%= env %>']
#   - task: get-bosh-source-json-from-lock
#     file: git-kubo-ci/tasks/get-bosh-source-json-from-lock.yml
#   - task: destroy-k8s
#     tags: [<%= env %>]
#     file: git-kubo-ci/tasks/destroy-k8s-instance.yml
#     on_failure: *on_failure_alert
<% end %>
